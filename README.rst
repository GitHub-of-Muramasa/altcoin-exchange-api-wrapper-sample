暗号通貨取引所のAPIラッパー実装例
===============
一部取引所のAPI説明に、理解し辛い表現や、仕様の記載漏れがあったため、実例を公開します。


**api_wrapper について**


- 概要

 - Pythonによる、各取引所APIを呼び出すプログラムの実装例です。

 - 各ApiWrapper instanceの初期化時にmarket_instanceを渡す必要があります。
 
   元々はDjangoアプリとして作成しているため、market_instanceはDB情報を元に取得する想定となっており、
 
   使用するためには、Marketクラスを自作する必要があります。
 
   参考として、O/Rマッパーである、models.pyも同梱しています。

 - 鍵ペアでの暗号化処理については、各取引所のAPIWrapperクラスのprivate関数("__"で始まるもの)を参照してください。


- 実装した機能

 - 注文一覧(depth)取得

 - アカウントの残高取得

 - 発注

 - 注文取消


- 対応取引所

 - AllCoin.com

 - BtcBox

 - etwings



**api_coorinator について**


- 概要

 - 全ての取引所APIに対し、画一的なインタフェースでアクセスすることを目指しています。

 - 実装途中のため、semantics は不明瞭です。


- 実装した機能

 - 基本通貨の数量から約定を見込める注文を取得する

 - 注文情報から約定を見込める注文を取得する(より有利な条件の注文を取得)

 - 相対通貨の数量から約定を見込める注文を取得する

 - 画一的なインタフェースで各取引所のアカウント残高を取得(実装途中)

 - 画一的なインタフェースで各取引所へ発注処理(実装途中)

 - 画一的なインタフェースで各取引所へ注文取消(実装途中)
